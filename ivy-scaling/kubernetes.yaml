apiVersion: v1
kind: Pod
metadata:
  name: db
  labels:
    app: ivy-db
spec:
  containers:
  - name: db
    image: postgres:latest
    env:
     - name: POSTGRES_USER
       value: "admin"
     - name: POSTGRES_PASSWORD
       value: "1234"
    ports:
     - containerPort: 5432       
---       
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ivy-deployment
spec:
  selector:
    matchLabels:
      app: ivy
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      name: db
      labels:
        app: ivy
    spec:
      containers:
       - name: ivy
         image: axonivy/axonivy-engine:scaling
         volumeMounts:
          - mountPath: /etc/axonivy-engine/enterprise-licence.lic
            name: licence
          - mountPath: /etc/axonivy-engine/ivy.yaml
            name: config
          - mountPath: /usr/lib/axonivy-engine-9/system/application/engine-cockpit/engine-cockpit-9.2.0-SNAPSHOT.iar.zip
            name: cockpit
          - mountPath: /usr/lib/axonivy-engine-9/deploy/task.iar
            name: task
         ports:
          - containerPort: 8080                
         resources:
           limits:
             cpu: "500m"           
      volumes:
       - name: licence
         hostPath:
           path: /C/dev/docker-samples/ivy-scaling/enterprise-licence.lic
           type: File       
       - name: config
         hostPath:
           path: /C/dev/docker-samples/ivy-scaling/ivy.yaml
           type: File
       - name: cockpit
         hostPath:
           path: /C/dev/docker-samples/ivy-scaling/engine-cockpit-9.2.0-SNAPSHOT.iar.zip
           type: File
       - name: task
         hostPath:
           path: /C/dev/docker-samples/ivy-scaling/task.iar
           type: File
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: ivy-db
spec:
  ports:
   - port: 5432
  selector:
    app: ivy-db
---
apiVersion: v1
kind: Service
metadata:
  name: ivy
  labels:
    app: ivy
spec:
  type: LoadBalancer
  ports:
   - port: 8080     
  selector:
    app: ivy
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
     kubernetes.io/ingress.class: nginx
     nginx.ingress.kubernetes.io/affinity: cookie
     nginx.ingress.kubernetes.io/affinity-mode: persistent
  name: ivy-ingress
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: ivy
          servicePort: 8080